#!/bin/sh

# BASIL: Bayesian Arterial SpIn Labeling parameter estimation
#
# Michael Chappell, FMRIB Image Analysis Group
#
# Copyright (c) 2007 University of Oxford
#
# SHCOPYRIGHT


Usage() {
    echo "Bayesian Inference for Arterial Spin Labelling MRI"
    echo "Version: 0.9X (beta oxford)"
    echo ""
    echo "Usage (optional parameters in {}):"
    echo " -i         : specify input/data file"
    echo " {-o}       : specify output directory"
    echo " -m         : specify brain mask file"
    echo " -@         : specify parameter options file"
    echo " Extended options:"
    echo " --nlls     : Do least squares analysis as first step"
    echo " --infertau : Add step to infer on bolus length"
    echo " --infert1  : Add step to include uncertainty in T1 values"
    echo " --inferart : Add step to infer on arterial compartment"
    echo ""
    echo ""
}

# deal with options

if [ -z $1 ]; then
    Usage
    exit 1
fi

until [ -z $1 ]; do
    case $1 in
	-o) outflag=1 outdir=$2
	    shift;;
	-i) inflag=1 infile=$2 #input/data file
	    shift;;
	-m) mask=$2
	    shift;;
	-@) options=$2 #options file (text)
	    shift;;
	--nlls) nllsonly=1;;
	--inferart) inferart=1;;
	--infert1) infert1=1;;
	--infertau) infertau=1;;

	--spatial) spatial=1;;
	--si) sinflag=1 spatfile=$2
	    shift;;

	*)  Usage
	    echo "Error! Unrecognised option on command line: $1"
	    echo ""
	    exit 1;;
    esac
    shift
done


# version of software to use
#mvntool=/home/fs0/chappell/cproject/fabber/mvntool_script
#mvntool=/home/fs0/chappell/cproject/fabber/mvntool
#fabber=/home/fs0/chappell/cproject/fabber/fabber
#fabber=/home/fs0/chappell/cproject/fabber_temp/fabber/fabber
mvntool=${FSLDIR}/bin/mvntool
fabber=${FSLDIR}/bin/fabber


# set the output directory here if not specified
if [ -z $outflag ]; then
    echo "Ouput being placed in basil subdirectory of input directory"
    outdir=$indir/basil;
fi

# Start by looking for the output directory (and create if need be)
count=0
while [ -d $outdir ]; do
    outdir=$outdir"+"
    count=`expr $count + 1`

    if [ $count -gt 20 ]; then
	echo "Error: $outdir too many existing output directories (i.e. shall not add another +)"
	exit
    fi
done
echo "Creating output directory: $outdir"
mkdir $outdir;

allinstruct="--data-order=singlefile"
vbinstruct="--method=vb --convergence=trialmode --max-iterations=20 --noise=white --allow-bad-voxels"
spvbinstruct="--method=spatialvb --max-iterations=20 --noise=white --allow-bad-voxels"


# get tau value from $options (if set)
tausearch=`grep tau $options`
if [ ! -z $tausearch ]; then
    tauset=`echo $tausearch | sed s/--tau=//`
else
    tauset=10 #effectively infinite
fi

echo "Using bolus length: $tauset"

nparam=2
paramtext="CBF and ^t"



if [ ! -z $nllsonly ]; then
    step=1
# STEP: NLLS
    echo "STEP $step: NLLS ($nparam param: $paramtext)"
    $fabber --data=$infile --mask=$mask --output=$outdir/step$step  $allinstruct --method=nlls -@ $options
    echo "STEP $step: NLLS ($nparam param: $paramtext)" > $outdir/step$step/info.txt


    stepfrom=$step
    nllsinstr=" --continue-from-mvn=$outdir/step${stepfrom}/finalMVN.nii.gz --continue-fwd-only"
    stepfromtext="- init with STEP $stepfrom"
    step=`expr $step + 1`

else
    nllsinstr=""
    step=1
    stepfromtext=""
fi

# STEP: VB 
echo "STEP $step: VB ($nparam param: $paramtext) $stepfromtext"
$fabber --data=$infile --mask=$mask --output=$outdir/step$step $allinstruct $vbinstruct -@ $options $nllsinstr
echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"  > $outdir/step$step/info.txt

stepfrom=$step
step=`expr $step + 1`

# deal with inference of arterial compartment
if [ ! -z $inferart ]; then
    # we are inferring an arterial compartment
    nparam=4
    allinstruct=$allinstruct" --inferart"
    paramtext="CBF, ^t, bCBF, b^t"

    $mvntool --input=$outdir/step${stepfrom}/finalMVN --output=$outdir/temp --mask=$mask --param=3 --new --val=10 --var=1
    $mvntool --input=$outdir/step${stepfrom}/finalMVN --output=$outdir/temp --mask=$mask --param=4 --new --val=0.5 --var=10


# STEP: VB 
    echo "STEP $step: VB ($nparam param: $paramtext) $stepfromtext"
    $fabber --data=$infile --mask=$mask --output=$outdir/step$step $allinstruct $vbinstruct -@ $options
    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"  > $outdir/step$step/info.txt

    stepfrom=$step
    step=`expr $step + 1`
    
fi


addinstruct=""

if [ ! -z $infertau ]; then
# STEP: VB add variable bolus length
    insposn=3 #sets position for tissue tau to be inserted by mvntool
    nparam=`expr $nparam + 1`
    paramtext=$paramtext", tau"

    if [ ! -z $inferart ]; then
	paramtext=$paramtext", btau"
	nparam=`expr $nparam + 1`
    fi

    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"
   
    $mvntool --input=$outdir/step${stepfrom}/finalMVN --output=$outdir/temp --mask=$mask --param=$insposn --new --val=$tauset --var=10
   
    if [ ! -z $inferart ]; then
        # add bolus length parameter for arterial compartment
	insposn=6 #sets position for arterial tau to be inserted by mvntool
	$mvntool --input=$outdir/temp --output=$outdir/temp --mask=$mask --param=$insposn --new --val=$tauset --var=10
    fi

    addinstruct="--infertau"
    $fabber --data=$infile --mask=$mask --output=$outdir/step$step $allinstruct $vbinstruct $addinstruct --continue-from-mvn=$outdir/temp -@ $options
    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom" > $outdir/step$step/info.txt

    stepfrom=$step
    step=`expr $step + 1`
fi



if [ ! -z $infert1 ]; then
# STEP: VB add variable T1
    insposn=`expr $nparam` # sets postion for T1 parameters to be inserved by mvntool (NB btau is put at very end)
    nparam=`expr $nparam + 2`
    paramtext=$paramtext", T1, T1b"
    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"
   
    $mvntool --input=$outdir/step${stepfrom}/finalMVN --output=$outdir/temp --mask=$mask --param=$insposn --new --val=1.3 --var=0.01 
    $mvntool --input=$outdir/temp --output=$outdir/temp --mask=$mask --param=`expr $insposn + 1` --new --val=1.6 --var=0.01
    
    addinstruct=$addinstruct" --infert1"
    $fabber --data=$infile --mask=$mask --output=$outdir/step$step $allinstruct $vbinstruct $addinstruct --continue-from-mvn=$outdir/temp -@ $options
    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom" > $outdir/step$step/info.txt

    stepfrom=$step
    step=`expr $step + 1`
fi

if [ ! -z $spatial ]; then
# STEP: Spatial VB as final stage
    text="STEP X: Spatial VB ($nparam param: $paramtext) - init with STEP $stepfrom"
    echo $text

    #deal with spatial priors specification
    #currently only ftiss is spatial
    spriors="pN+"

    $fabber --data=$spatfile --mask=$mask --output=$outdir/stepx $allinstruct $spvbinstruct $addinstruct --continue-from-mvn=$outdir/step${stepfrom}/finalMVN --spatial-dims=2 --param-spatial-priors=$spriors -@ $options
    echo $text > $outdir/stepx/info.txt
fi 

echo "End."
