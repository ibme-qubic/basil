#!/bin/sh

# BASIL: Bayesian Arterial SpIn Labeling parameter estimation
#
# Michael Chappell, FMRIB Image Analysis Group
#
# Copyright (c) 2007 University of Oxford
#
# 


# deal with options

if [ -z $1 ]; then
    echo "Bayesian Inference for Arterial Spin Labelling MRI"
    echo "Version: 0.92 (pre-release internal)"
    echo ""
    echo "Usage (optional parameters in {}):"
    echo " -i         : specify input/data file"
    echo " {-o}       : specify output directory"
    echo " -m         : specify brain mask file"
    echo " -@         : specify parameter options file"
    echo " Extended options:"
    echo " --nlls     : Only do least squares analysis"
    echo " --infertau : Add step to infer on bolus length"
    echo " --infert1  : Add step to include uncertainty in T1 values"
    echo " --inferart : Add step to infer on arterial compartment (GRASE only)"
    echo ""
    echo ""
    break
else

until [ -z $1 ]; do
    case $1 in
	-o) outflag=1 outdir=$2
	    shift;;
	-i) inflag=1 infile=$2 #input/data file
	    shift;;
	-m) mask=$2
	    shift;;
	-@) options=$2 #options file (text)
	    shift;;
	--nlls) nllsonly=1;;
	--inferart) inferart=1;;
	--infert1) infert1=1;;
	--infertau) infertau=1;;
    esac
    shift
done


# version of software to use
#mvntool=/home/fs0/chappell/cproject/fabber/mvntool_script
mvntool=/home/fs0/chappell/cproject/fabber/mvntool
fabber=/home/fs0/chappell/cproject/fabber/fabber
#mvntool=${FSLDIR}/bin/mvntool
#fabber=${FSLDIR}/bin/fabber


# set the output directory here if not specified
if [ -z $outflag ]; then
    echo "Ouput being placed in basil subdirectory of input directory"
    outdir=$indir/basil;
fi

# Start by looking for the output directory (and create if need be)
if [ ! -d $outdir ]; then
  echo "Creating output directory"
  mkdir $outdir;
fi

allinstruct="--data-order=singlefile"
vbinstruct="--method=vb --convergence=trialmode --max-iterations=20 --noise=white --allow-bad-voxels"

# deal with inference on bolus length option
if [ ! -z $infertau ]; then
    # we are inferring on the bolus length
    nparam=3
    allinstruct=$allinstruct" --infertau"
    paramtext="CBF, ^t and tau"

    # get tau value from $options (if set)
    tausearch=`grep tau $options`
    if [ ! -z $tausearch ]; then
	tauset=`echo $tausearch | sed s/--tau=//`
    else
	tauset=10 #effectively infinite
    fi

    echo $tauset
    break
else
    nparam=2
    paramtext="CBF and ^t"
fi

step=1
# STEP 1: NLLS
echo "STEP $step: NLLS ($nparam param: $paramtext)"
$fabber --data=$infile --mask=$mask --output=$outdir/step$step  $allinstruct --method=nlls -@ $options
echo "STEP $step: NLLS ($nparam param: $paramtext)" > $outdir/step$step/info.txt

if [ ! -z $nllsonly ]; then
    echo "NLLS completed: stopping here"
    break
else


stepfrom=$step
step=`expr $step + 1`

# STEP 2: VB 
echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"
$fabber --data=$infile --mask=$mask --output=$outdir/step$step $allinstruct $vbinstruct --continue-from-mvn=$outdir/step${stepfrom}/finalMVN.nii.gz --continue-fwd-only -@ $options
echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"  > $outdir/step$step/info.txt

stepfrom=$step
step=`expr $step + 1`

addinstruct=""
if [ ! -z $inferart ]; then
# STEP: VB add arterial compartment
    insposn=`expr $nparam + 1` #sets position for arterial parameters to be inserted by mvntool
    nparam=`expr $nparam + $nparam`
    paramtext=$paramtext", bCBF, b^t"

    if [ ! -z $infertau ]; then
	paramtext=$paramtext", btau"
    fi

    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"
   
    $mvntool --input=$outdir/step${stepfrom}/finalMVN --output=$outdir/temp --mask=$mask --param=$insposn --new --val=10 --var=1
    $mvntool --input=$outdir/temp --output=$outdir/temp --mask=$mask --param=`expr $insposn + 1` --new --val=0.5 --var=10

    if [ ! -z $infertau ]; then
        # add bolus length parameter for arterial compartment
	$mvntool --input=$outdir/temp --output=$outdir/temp --mask=$mask --param=`expr $insposn + 2` --new --val=$tauset --var=10
    fi

    addinstruct="--inferart"
    $fabber --data=$infile --mask=$mask --output=$outdir/step$step $allinstruct $vbinstruct $addinstruct --continue-from-mvn=$outdir/temp -@ $options
    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom" > $outdir/step$step/info.txt

    stepfrom=$step
    step=`expr $step + 1`
fi



if [ ! -z $infert1 ]; then
# STEP: VB add variable T1
    nparam=`expr $nparam + 2`
    insposn=`expr $nparam` # sets postion for T1 parameters to be inserved by mvntool (NB btau is put at very end)
    paramtext=$paramtext", T1, T1b"
    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom"
   
    $mvntool --input=$outdir/step${stepfrom}/finalMVN --output=$outdir/temp --mask=$mask --param=$insposn --new --val=1.3 --var=0.01 
    $mvntool --input=$outdir/temp --output=$outdir/temp --mask=$mask --param=`expr $insposn + 1` --new --val=1.5 --var=0.01
    
    addinstruct=$addinstruct" --infert1"
    $fabber --data=$infile --mask=$mask --output=$outdir/step$step $allinstruct $vbinstruct $addinstruct --continue-from-mvn=$outdir/temp -@ $options
    echo "STEP $step: VB ($nparam param: $paramtext) - init with STEP $stepfrom" > $outdir/step$step/info.txt
fi
fi
fi

echo "End."
